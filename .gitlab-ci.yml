stages:
  - build
  - test
  - Docker

build:
  stage: build

  tags:
    - all

  before_script:
    # - |
    #   $headers = @{
    #     "PRIVATE-TOKEN" = "$GITLAB_ACCESCODE"
    #   }
    #   $pipelineStatusUrl = "https://git.fhict.nl/api/v4/projects/54639/pipelines"
    #   $response = Invoke-RestMethod -Uri $pipelineStatusUrl -Headers $headers -Method Get -UseBasicParsing
    #   $runningPipelines = $response | Where-Object { $_.status -eq "running" -or $_.status -eq "pending" }

    #    if ($runningPipelines.Count -eq 0) {
    #     $triggerPipelineUrl = "https://git.fhict.nl/api/v4/projects/54639/trigger/pipeline"
    #     $body = @{
    #       "token" = "$FRONT_END_TOKEN"
    #       "ref" = "main"
    #     }
    #     Invoke-RestMethod -Uri $triggerPipelineUrl -Body $body -Method Post -UseBasicParsing
    #   } 

    # - Invoke-WebRequest -Method Post -Body @{"token"="$FRONT_END_TOKEN"; "ref"="main"} -Uri "https://git.fhict.nl/api/v4/projects/54639/trigger/pipeline" -UseBasicParsing
    - echo $Env:Path;

  script:
    - mvn clean install -X -DskipTests


maven_test:
  stage: test

  tags:
    - all

  before_script:
    - echo $Env:Path
    - mvn clean install -DskipTests

  script:
    - mvn test -X


Docker_building:
  stage: Docker

  tags:
    - docker

  variables:
    DOCKER_IMAGE_NAME: $DOCKER_USERNAME"/semester-3-2023-fontys"
    DOCKER_REGISTRY: "docker.io"

  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin "$DOCKER_REGISTRY"

  script:
    - docker build -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    
  only:
    - main
